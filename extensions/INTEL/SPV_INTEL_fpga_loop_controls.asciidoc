SPV_INTEL_fpga_loop_controls
============================

== Name Strings

SPV_INTEL_fpga_loop_controls

== Contact

To report problems with this extension, please open a new issue at:

https://github.com/KhronosGroup/SPIRV-Headers

== Contributors

- Joe Garvey, Intel +
- Michael Kinsner, Intel

== Notice

Copyright (c) 2019 Intel Corporation.  All rights reserved.

== Status

Final draft

== Version

[width="40%",cols="25,25"]
|========================================
| Last Modified Date | {docdate}
| Revision           | B
|========================================

== Dependencies

This extension is written against the SPIR-V Specification,
Version 1.3 Revision 6.

This extension requires SPIR-V 1.0.

== Overview

This extension adds a mechanism to annotate vendor extension loop controls without allocation of a bit in the loop control bitfield, or an extended version of the bitfield, for each vendor control.  The new mechanism is used to add additional loop controls for FPGA targets.  These new loop controls may eventually be migrated to formal bitfield locations if deemed useful more broadly, either through Khronos mechanisms, or through a revision of this extension.

== Extension Name
To use this extension within a SPIR-V module, the following *OpExtension* must be present in the module:

----
OpExtension "SPV_INTEL_fpga_loop_controls"
----
 
== New capabilities
This extension introduces a new capability:

----
FPGALoopControlsINTEL
----

== Token Number Assignments

[width="40%"]
[cols="70%,30%"]
[grid="rows"]
|====
|FPGALoopControlsINTEL  |5888
|InitiationIntervalINTEL|5889
|MaxConcurrencyINTEL|5890
|DependencyArrayINTEL   |5891
|====

== Modifications to the SPIR-V Specification, Version 1.3

=== Loop Control
In section 3.23, Loop Control, add the following entry to the table:

|=====
| 0x80000000 | *ExtendedControls* +
Indicates that there will follow a sequence of additional loop control and loop control parameter pairs.  The parameters for these additional loop controls are documented in Section 3.23.1. |
|=====

At the end of the section add a new sub-section as follows:

*3.23.1 Extended Loop Controls*

Used by:

* *OpLoopMerge*

[options="header"]
[cols=4]
|====
2+^| *Loop Control* | *Extra Operands* | *Enabling Capabilities*
| 5889 | *InitiationIntervalINTEL* +
Strong request, to the extent possible, to implement this loop with an initiation interval specified as a subsequent literal-number operand to the instruction. | Literal Number +
_II_ | *FPGALoopControlsINTEL*
| 5890 | *MaxConcurrencyINTEL* +
Strong request, to the extent possible, to allow no more than a fixed number of threads or loop iterations to execute the loop concurrently as specified by a subsequent literal-number operand to the instruction. | Literal Number +
_Maximum Concurrency_ | *FPGALoopControlsINTEL*
| 5891 | *DependencyArrayINTEL* +
Guarantees that there are no dependencies on a particular variable between a number of loop iterations.  
Can be applied to multiple variables, the number of which is specified as a subsequent literal-number operand to the instruction.  
For each variable an <id> and literal number pair are provided indicating the variable and number of loop iterations. A number of loop iterations of 0 indicates that there are no loop-carried dependences on that variable.  | Literal Number, +
<id>, Literal Number, <id>, Literal Number, ...
_Number of Variables_, +
_Variable_, _Length_, _Variable_, _Length_ ... | *FPGALoopControlsINTEL*
|====

=== Capability

Modify Section 3.31, Capability, adding a row to the Capability table:

[options="header"]
|=====
2+^| Capability ^| Implicitly Declares
| 5888 | FPGALoopControlsINTEL | 
|=====

=== Validation Rules

None.

== Issues

None.

== Revision History

[cols="5,15,15,70"]
[grid="rows"]
[options="header"]
|========================================
|Rev|Date|Author|Changes
|A|2019-05-06|Joe Garvey|*Initial public release*
|B|2019-05-07|Michael Kinsner|Update overview wording
|======================================== 

